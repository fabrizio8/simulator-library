import pytest
from simulator import *
from example_nfa import *

def test_even_0_or_1():
    traces = [
              ([(None, 4), ('1', 5), ('0', 5), ('0', 5), ('0', 5), ('1', 4)],True),
              ([(None, 4), ('1', 5), ('0', 5), ('1', 4), ('0', 4), ('1', 5)],True),
              ([(None, 4)], True),
              ([(None, 4)], True),
              ([(None, 2)],True),
              ([(None, 2)],True),
              ([(None, 2), ('1', 4)],False),
              ([(None, 2), ('1', 6)],False),
              ([(None, 4), ('1', 3)], False),
              ([(None, 2), ('0', 5)], False),
              ([(None, 2), ('1', 5), ('0', 5), ('0', 5), ('1', 4)], False),
              ([(None, 4), ('1', 5), ('0', 5), ('1', 5), ('0', 5), ('1', 5)],False),
            ]
    for trace in traces:
        assert even_0_or_1.oracle(*trace)

def test_ends_in_1():
    traces = [
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('1', 2)],True),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('1', 1)],True),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1)],True),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1)],True),
              ([('1', 1)],True),
              ([('0', 1)],True),
              ([('0', 2)],False),
              ([('1', 1), ('1', 1),('0', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 2), ('0', 3)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('0', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('0', 3)],False),
            ]
    for trace in traces:
        assert ends_in_1.oracle(*trace)


def test_ends_in_0():
    traces = [
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('1', 1)],True),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('1', 1)],True),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1)],True),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1)],True),
              ([('0', 1), ('0', 2)],True),
              ([('0', 2)],True),
              ([('1', 2)],False),
              ([('1', 1), ('1', 1),('1', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('1', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('1', 2), ('0', 3)],False),
              ([('1', 1), ('1', 2), ('0', 1), ('1', 1), ('0', 1), ('0', 2)],False),
              ([('1', 1), ('1', 2), ('0', 1), ('1', 1), ('0', 1), ('0', 3)],False),
            ]
    for trace in traces:
        assert ends_in_0.oracle(*trace)

def test_subtring_101():
    traces = [
              ([('1', 2), ('1', 2), ('1', 2), ('1', 2), ('1', 2), ('1', 2)],True),
              ([('0', 1), ('0', 1), ('0', 1), ('0', 1), ('0', 1)],True),
              ([('1', 2), ('1', 2), ('1', 2), ('0', 3)],True),
              ([('1', 1), ('1', 1), ('0', 1)],True),
              ([('1', 1)],True),
              ([('0', 1)],True),
              ([('0', 2)],False),
              ([('1', 1), ('1', 1),('0', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 2), ('0', 3)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('0', 2)],False),
              ([('1', 1), ('1', 1), ('0', 1), ('0', 1), ('0', 1), ('0', 3)],False),
            ]
    for trace in traces:
        assert substring_101.oracle(*trace)

def test_ends_with_01():
    traces = [
            ([('0', 1), ('0',1), ('1', 1),('0', 2), ('1', 3)],True),
            ([('0', 1), ('0',1), ('1', 1),('0', 2)],True),
            ([('0', 1), ('0',1)],True),
            ([('0', 1), ('0',2), ('1', 3),],True),
            ([('0', 2)],True),
            ([('0', 1)],True),
            ([('0', 3)],False),
            ([('1', 2)],False),
            ([('0', 3),('1', 2)],False),
            ([('0', 3),('1', 2),('1',3)],False),
            ([('0', 1),('1', 2),('1',3)],False),
            ([('0', 1),('1', 4),('1',3)],False),
            ]
    for trace in traces:
        assert ends_with_01.oracle(*trace)

def test_oneone():
    traces = [
              ([('1', 2), ('1', 3), ('1', 3), ('1', 3), ('1', 3), ('1', 3)],True),
              ([('1', 2), ('1', 4), ('0', 4), ('0', 4)],True),
              ([('1', 2), ('1', 3), ('1', 3)],True),
              ([('1', 2), ('1', 4), ('0', 4)],True),
              ([('1', 2), ('1', 3), ('1', 3)],True),
              ([('1', 2)],True),
              ([('0', 2)],False),
              ([('1', 2), ('1', 3), ('0', 3)],False),
              ([('1', 2), ('1', 3), ('0', 4), ('0', 4)],False),
              ([('0', 2), ('0', 1), ('0', 1), ('0', 1), ('0', 1)],False),
              ([('1', 2), ('1', 4), ('0', 1), ('0', 1), ('0', 1), ('0', 2)],False),
              ([('1', 2), ('1', 3), ('0', 3), ('0', 3), ('0', 3), ('0', 3)],False),
            ]
    for trace in traces:
        assert oneone.oracle(*trace)

def test_double1_0():
    traces = [
                ([('0',1),('1',2),('1',3),('0',4),('0',5),('0',5)], True),
                ([('0',1),('1',2),('1',3),('0',4),('0',5),('1',5)], True),
                ([('0',1),('1',2),('1',3),('0',4),('0',5)], True),
                ([('1',2),('1',3),('0',4),('0',5)], True),
                ([('1',2),('1',3),('0',4),('0',5),('0',5),('0',5)], True),
                ([('1',2),('1',3),('0',4),('0',5),('1',5),('1',5)], True),
                ([('0',1),('0',1),('1',2),('0',4),('0',5),('0',5)], False),
                ([('0',1),('1',1),('0',2),('0',4),('0',5),('1',5)], False),
                ([('0',1),('1',1),('0',2),('1',4),('0',5)], False),
                ([('1',1),('0',2),('0',4),('0',5)], False),
                ([('0',1),('1',2),('0',4),('0',5),('0',5),('0',5)], False),
                ([('1',1),('0',2),('0',4),('0',5),('1',5),('1',5)], False),
            ]
    for trace in traces:
        assert double1_0.oracle(*trace)

# accepts strings that contain at least two 0s or exactly two 1s
def test_zero_or_one():
    traces = [
              ([('1', 5), ('0', 5), ('0', 5), ('0', 5), ('0', 5), ('1', 6)],True),
              ([('1', 5), ('0', 5), ('0', 5), ('0', 5), ('1', 6), ('0', 6)],True),
              ([(None, 2), ('0', 3), ('0', 4)],True),
              ([(None, 2), ('1', 2), ('0', 3)],True),
              ([(None, 2)],True),
              ([('1', 5)],True),
              ([('0', 2)],False),
              ([('1', 2), ('1', 3), ('0', 3)],False),
              ([('1', 2), ('1', 3), ('0', 4), ('0', 4)],False),
              ([(None, 2), ('0', 1), ('0', 1), ('0', 1), ('0', 1)],False),
              ([(None, 2), ('1', 4), ('0', 1), ('0', 1), ('0', 1), ('0', 2)],False),
              ([(None, 2), ('1', 3), ('0', 3), ('0', 3), ('0', 3), ('0', 3)],False),
            ]
    for trace in traces:
        assert zero_or_one.oracle(*trace)

def test_3rd_from_last_is_0():
    traces = [
            ([('0',1),('1',1),('0',1),('0',2),('0',3),('0',4)], True),
            ([('0',1),('1',1),('0',1),('0',2),('0',3),('1',4)], True),
            ([('0',1),('1',1),('0',1),('0',2),('1',3),('1',4)], True),
            ([('0',1),('0',1),('0',1),('0',2),('0',3),('0',4)], True),
            ([('0',1),('0',1),('0',2),('0',3),('0',4)], True),
            ([('0',1),('0',2),('0',3),('0',4)], True),
            ([('0',1),('1',1),('0',1),('0',2),('0',3),('0',1)], False),
            ([('0',3),('1',4),('0',1),('0',2),('0',3),('1',4)], False),
            ([('0',2),('1',1),('0',1),('0',2),('1',5),('1',4)], False),
            ([('0',1),('0',3),('0',1),('0',7),('0',3),('0',4)], False),
            ([('0',1),('0',1),('0',2),('0',2),('0',4)], False),
            ([('0',1),('0',2),('0',2),('0',4)], False),
            ]
    for trace in traces:
        assert third_from_last_is_0.oracle(*trace)

def test_ends_in_a():
    traces = [
            ([('a',1),('a',1),('a',1),('a',1),('a',1),('a',2),], True),
            ([('a',1),('b',1),('c',1),('b',1),('c',1),('a',2),], True),
            ([('b',1),('b',1),('b',1),('b',1),('b',1),('a',2),], True),
            ([('c',1),('b',1),('a',2),], True),
            ([('b',1),('a',2),], True),
            ([('a',2),], True),
            ([('a',1),('a',1),('a',1),('a',1),('a',1),('b',2),], False),
            ([('a',1),('b',1),('c',1),('b',1),('c',1),('c',2),], False),
            ([('b',1),('b',1),('b',1),('b',1),('b',1),('d',2),], False),
            ([('c',2),('b',1),('c',2),], False),
            ([('b',2),('a',2),], False),
            ([('a',2),], False),
            ]
    for trace in traces:
        ends_in_a.oracle(*trace)
